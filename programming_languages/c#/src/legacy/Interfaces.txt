using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace INTERFACES
{

    //The IComparable defines a generalized comparison method for a type or class
    //Its like a class itself
    //You create this when a comparison will be needed between class members
    class Employee : IComparable
    {
        //Declaring properties like in a class{Like I said it is a class}
        public int Id { set; get; }
        public double Salary { set; get; }

        //Declaring the method
        int IComparable.CompareTo(Object o)
        {
            int ReturnV;
            Employee temp = (Employee)o;
            //We use "this" because it is an instance method.It belongs to a particluar object
            //If the owner object's Id is greater than the temp,the method returns 1
            if (this.Id > temp.Id)
                ReturnV = 1;
            //If the owner object's Id is less than the temp,the method returns -1
            else
                if (this.Id < temp.Id)
                    ReturnV = -1;
                //If equal 0 is returned
                else
                    ReturnV = 0;
            //NB:All three assigneof the ReturnV neeed to be there.This method seems to require all three
            return ReturnV;
        }
    }

    class Comparable_Employee_Class
    {
        public static void Main1()
        {

            /*When declaring an array of objects,you are simply creating the reference to them not actually them
            A constructer is need to make an object,dont forget that*/
            Employee[] Employees = new Employee[5];
            //Filling the array
            for (int A = 0; A < Employees.Length; ++A)
                Employees[A] = new Employee();
            //Above I actually instantiated the objects
                
                Employees[0].Id = 123;
                Employees[1].Id = 28;
                Employees[3].Id = 45;
                Employee Tester = new Employee();
                Tester.Id = 3;
            
            //This method doesnt work on objects unless the interface has been created
            Array.Sort(Employees);

            for (int B = 0; B < Employees.Length; ++B)
            {
                Console.WriteLine("{0}", Employees[B].Id);
            }

            Console.ReadLine();
        }

    }
    class Interface_Class_Demo_Host
    {
        static void Main(string[] args)
        {
            //used an object initialiser
            Employee Sec = new Employee() { Id = 100};
            Employee Clerk = new Employee() { Id = 90};
            int Answer = Sec.Id.CompareTo(Clerk);
            Console.WriteLine(Answer);
            Console.Read();
        }
    }
    
}
