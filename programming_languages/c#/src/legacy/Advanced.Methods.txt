 //2. REceivess variables(reference variables) and alters their values
        public static void Ref(ref int A)
        {
        }
        //2.This method recieves variables without values and gives them values(output parameters) which they exit to the main method assigned with,with use of the "out" keyword
        public static void OutputParameterMethod(out int S1, out int S2)
        {
            Console.WriteLine("Enter a value");
            S1 = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter a value");
            S2 = Convert.ToInt32(Console.ReadLine());
            int S = Convert.ToInt32(S1);
            int SS = Convert.ToInt32(S2);
        }
        //3.This can receive any number of arguments of the same data type at a single time(in the call) and forms an array with them
        //if other arguments come in the params one must be the last one and there can only be one params-qualified parameter
        public static void Params(params string [] Words)
        {
            foreach (string W in Words)
            {
                Console.WriteLine(W);
            }
        }
        //4
        //NB: "Object" data type accepts anything.e.g public static void Params(Oject A).You can decarea an array of objects
        //Can be used with [params] to receive any number of paramters of any data type
        public static void Cool(params Object [] A)
        {
            //Accessing the array
            foreach (Object B in A)
            Console.WriteLine(B);
        }
        static void Main(string[] args)
        {
            //2. Call
            int First, Second;
        OutputParameterMethod(out First ,out Second );
            Console.WriteLine("{0,0}  {1,6}",First,Second);
            //3. Call
            Params("HI","Trace");
            //4.Call
            Cool("hi",1,5,"AI");
            Console.Read();
        }