Go declaration syntax:
    https://blog.golang.org/gos-declaration-syntax


    KEY RULES
        name ALWAYS comes first
        read left to right

    EXAMPLES:
        Type definition (for a value):
            x int => x of type int
            p *int => point to int
            a [3]int => int array of size 3

            f func(func(int, int) int, int) int => f is a function that takes
                                                            a function and an int
                                                            and returns a int

                                                            => the function parameter takes 2 ints and returns an int

            f2 func(func(int, int) int, int) func(int, int) int f2 is a function that takes
                                                                    a function and an int
                                                                    and returns a function that takes 2 ints and returns an int

                                                                    => the function parameter takes 2 ints and returns an int

    TYPE vs EXPRESSION syntax: HUH??
        sum := func(a, b int) int { return a+b } (1,2)