Java looping constructs
	forloop
	for [each]
	while loop
	do while

For loop
	The comma operator

		for(int i = 0, l = 10; j > 5; i++, j--)
			System.out.printf(%3d %3d%n, i, j);

		for(int i = 0, int j = 10; j > 5; i++, j--): produces an error cannot declare i and j like that.

The for statement
   Using the for-each statement with a list

    for statement
     will not be affected: 
	 for(String word : list) {    
		 if(word.equals("bears."))         
		 {
			word =  "kitty cats";       
			list.add("kitty cats");    //Code on addition will fail. Why?
		 } 
	 }
	 
	Issues:
		If array/list is null NULLPOINTEREXCEPTION is thrown
		Works well with methods requiring variable arguments
		
		Null values
			println checks if value is null and returns a NULL value (it does not throw a NULLPOINTEREXCEPTION)
			toString method throws this NULLPOINTEREXCEPTION
			
		Variable number of arguments
		
			public int total(int ... array) {
				int sum = 0;
				for(int number : array) { //can still use for loop
					sum+=number;
				}
				return sum;
			}

Implementing the Iterator interface
	Revisit, interesting topic!!
	
	
The while statement

	frequently used when number of iterations unknown
	
The do while
	useful when statement needs to execute at least once regardless of the conditino

Break statement
	terminate execution in a loop 
	control handed to next statement after the loop

Continue statement
	skip everything
	pass contro to loop logical expression

	Infinite loops
		while (true) {
			// body
		}
		
		for (;;) {
			// body
		}
	

java labels
	similar to C/C++ goto?

Pitfalls
     int i = 1; while(i < 10) ;   i++; results in infinite loop

Test Knowledge
    1. A, B, D?	
	correction: A, D
    2. B, A?
	correct: B
    3. A, B, D 
    4. A, B, C
    5. A
